package stuff;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;
import java.io.File;
import java.io.IOException;

public class Screen {
	
	private int width;
	private int height;
	
	HexagonComponent parent;
	
	BufferedImage image;
	
	Graphics g;
	
	BufferedImage hex;
	BufferedImage selectedHex;
	BufferedImage highlightHex;
	BufferedImage unit;
	
	public Screen(HexagonComponent parent, int width, int height) {
		this.parent = parent;
		this.width = width;
		this.height = height;
		
		image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
		g = image.getGraphics();
		
		try {
			hex = ImageIO.read(new File("hex.png"));
			selectedHex = ImageIO.read(new File("selectedHex.png"));
			highlightHex = ImageIO.read(new File("highlightHex.png"));
			unit = ImageIO.read(new File("unit.png")); 
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public void render(Game game) {
		if (game.curScreen == Game.BOARD) {
			//draw background
			g.setColor(Color.BLACK);
			g.fillRect(0, 0, width, height);
			g.setColor(Color.RED);
			g.fillRect(width - 200, 0, 200, height);
			
			Board board = game.board;
			Tile[][] tiles = board.tiles;
			
			//draw board
			for (int i=0; i<tiles.length; i++) {
				for (int j=0; j<tiles[i].length; j++) {
					int x = 5 + j * 56 + (i % 2) * 28;
					int y = 5 + i * 15;
					
					//draw highlighted tile
					if (game.highlighting && j == board.highlightX && i == board.highlightY)
						g.drawImage(highlightHex, x, y, parent);
					//draw cursor tile
					else if (j == board.cursorX && i == board.cursorY)
						g.drawImage(selectedHex, x, y, parent);
					//draw tile
					else
						g.drawImage(hex, x, y, parent);
					
					if (game.board.tiles[i][j].occupant != null)
						g.drawImage(unit, x, y, parent);
				}
			}
		}
	}
}
