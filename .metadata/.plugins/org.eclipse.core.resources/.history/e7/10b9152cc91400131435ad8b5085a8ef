package stuff;

import java.util.ArrayList;

public class Unit {
	
	private static final int[] abilityCosts =
			new int[]{-20, -15, -10, 0, 10, 20, 30, 45, 60, 80, 100};

	int characterPoints;
	
	int[] attributes;
	
	//advantages
	boolean ambidexterity;
	boolean combatReflexes;
	boolean peripheralVision;
	int toughness;
	
	//skill modifiers
	ArrayList<Skill> skills;
	
	public Unit(int pointTotal) {
		characterPoints = pointTotal;
		
		attributes = new int[4];
		for (int a : attributes)
			a = 10;
		
		skills = new ArrayList<Skill>();
	}
	
	public boolean setAbility(int ability, int score) {
		if (score < 7)
			return false;
		
		int curScore = attributes[ability];
		int cost = 0;
		
		if (curScore > 17) {
			cost -= (curScore - 17) * 25;
			curScore = 17;
		}
		
		cost -= abilityCosts[curScore - 7];
		
		if (score > 17) {
			cost += (score- 17) * 25;
			score = 17;
		}
		
		cost += abilityCosts[score - 7];
		
		if (cost > characterPoints)
			return false;
		
		characterPoints -= cost;
		
		return true;
	}
	public boolean setAmbidexterity(boolean on) {
		if (!on) {
			if (!ambidexterity)
				return true;
			
			characterPoints += 10;
			ambidexterity = false;
			return true;
		} else {
			if (ambidexterity)
				return true;
			
			if (characterPoints >= 10) {
				characterPoints -= 10;
				return true;
			} else
				return false;
		}
	}
	public boolean setCombatReflexes(boolean on) {
		if (!on) {
			if (!combatReflexes)
				return true;
			
			characterPoints += 15;
			combatReflexes = false;
			return true;
		} else {
			if (combatReflexes)
				return true;
			
			if (characterPoints >= 15) {
				characterPoints -= 15;
				return true;
			} else
				return false;
		}
	}
	public boolean setPeripheralVision(boolean on) {
		if (!on) {
			if (!peripheralVision)
				return true;
			
			characterPoints += 15;
			peripheralVision = false;
			return true;
		} else {
			if (peripheralVision)
				return true;
			
			if (characterPoints >= 15) {
				characterPoints -= 15;
				return true;
			} else
				return false;
		}
	}
	public boolean setToughness(int level) {
		if (level == toughness)
			return true;
		
		if (level < 0)
			return false;

		int cost = 0;
		
		if (toughness >= 1)
			cost -= 10;
		
		if (toughness >= 2)
			cost -= 15;
		
		cost -= 25 * (toughness - 2);
		
		if (level >= 1)
			cost += 10;
		
		if (level >= 2)
			cost += 15;
		
		cost += 25 * (level - 2);
		
		if (cost > characterPoints)
			return false;
		
		characterPoints -= cost;
		return true;
	}

	public boolean addSkill(String skillName, int modifier, int difficulty) {
		for (Skill s : skills)
			if (s.name.equals(skillName) && s.difficulty == difficulty) {
				
			}
		return true;
	}
}
